@misc{Capitole_du_Libre_2019,
	title = {Le protocole {QUIC}, ou la nouvelle couche de transport — {Stéphane} {Bortzmeyer}},
	url = {https://www.youtube.com/watch?v=tJTWaG9VF6c},
	abstract = {Licence de paternité Creative Commons (réutilisation autorisée)},
	urldate = {2024-11-20},
	author = {{Capitole du Libre}},
	month = nov,
	year = {2019},
}

@article{kakhki_taking_2019,
	title = {Taking a long look at {QUIC}: an approach for rigorous evaluation of rapidly evolving transport protocols},
	volume = {62},
	issn = {0001-0782, 1557-7317},
	shorttitle = {Taking a long look at {QUIC}},
	url = {https://dl.acm.org/doi/10.1145/3330336},
	doi = {10.1145/3330336},
	abstract = {Google’s Quick UDP Internet Connections (QUIC) protocol, which implements TCP-like properties at the application layer atop a UDP transport, is now used by the vast majority of Chrome clients accessing Google properties but has no formal state machine specification, limited analysis, and ad-hoc evaluations based on snapshots of the protocol implementation in a small number of environments. Further frustrating attempts to evaluate QUIC is the fact that the protocol is under rapid development, with extensive rewriting of the protocol occurring over the scale of months, making individual studies of the protocol obsolete before publication.},
	language = {en},
	number = {7},
	urldate = {2024-11-20},
	journal = {Communications of the ACM},
	author = {Kakhki, Arash Molavi and Jero, Samuel and Choffnes, David and Nita-Rotaru, Cristina and Mislove, Alan},
	month = jun,
	year = {2019},
	pages = {86--94},
	file = {PDF:/home/nils-barrellon/Zotero/storage/T6L3M5MH/Kakhki et al. - 2019 - Taking a long look at QUIC an approach for rigorous evaluation of rapidly evolving transport protoc.pdf:application/pdf},
}

@inproceedings{ruth_perceiving_2019,
	address = {New York, NY, USA},
	series = {{CoNEXT} '19},
	title = {Perceiving {QUIC}: do users notice or even care?},
	isbn = {978-1-4503-6998-5},
	shorttitle = {Perceiving {QUIC}},
	url = {https://dl.acm.org/doi/10.1145/3359989.3365416},
	doi = {10.1145/3359989.3365416},
	abstract = {QUIC, as the foundation for HTTP/3, is becoming an Internet reality. A plethora of studies already show that QUIC excels beyond TCP+ TLS+HTTP/2. Yet, these studies compare a highly optimized QUIC Web stack against an unoptimized TCP-based stack. In this paper, we bring TCP up to speed to perform an eye-level comparison. Instead of relying on technical metrics, we perform two extensive user studies to investigate QUIC's impact on the quality of experience. First, we investigate if users can distinguish two protocol versions in a direct comparison, and we find that QUIC is indeed rated faster than TCP and even a tuned TCP. Yet, our second study shows that this perceived performance increase does mostly not matter to the users, and they rate QUIC and TCP indistinguishable.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 15th {International} {Conference} on {Emerging} {Networking} {Experiments} {And} {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Rüth, Jan and Wolsing, Konrad and Wehrle, Klaus and Hohlfeld, Oliver},
	month = dec,
	year = {2019},
	pages = {144--150},
	file = {Version soumise:/home/nils-barrellon/Zotero/storage/URH9J5E8/Rüth et al. - 2019 - Perceiving QUIC do users notice or even care.pdf:application/pdf},
}

@inproceedings{mishra_containing_2023,
	address = {New York, NY, USA},
	series = {{IMC} '23},
	title = {Containing the {Cambrian} {Explosion} in {QUIC} {Congestion} {Control}},
	isbn = {979-8-4007-0382-9},
	url = {https://dl.acm.org/doi/10.1145/3618257.3624811},
	doi = {10.1145/3618257.3624811},
	abstract = {Since its introduction in 2015, QUIC has seen rapid adoption and is set to be the default transport stack for HTTP3. Given that developers can now easily implement and deploy their own congestion control algorithms in the user space, there is an imminent risk of the proliferation of QUIC implementations of congestion control algorithms that no longer resemble their corresponding standard kernel implementations.In this paper, we present the results of a comprehensive measurement study of the congestion control algorithm (CCA) implementations for 11 popular open-source QUIC stacks. We propose a new metric called Conformance-T that can help us identify the implementations with large deviations more accurately and also provide hints on how they can be modified to be more conformant to reference kernel implementations. Our results show that while most QUIC CCA implementations are conformant in shallow buffers, they become less conformant in deep buffers. In the process, we also identified five new QUIC implementations that had low conformance and demonstrated how low-conformance implementations can cause unfairness and subvert our expectations of how we expect different CCAs to interact. With the hints obtained from our new metric, we were able to identify implementation-level differences that led to the low conformance and derive the modifications required to improve conformance for three of them.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 2023 {ACM} on {Internet} {Measurement} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Mishra, Ayush and Leong, Ben},
	month = oct,
	year = {2023},
	pages = {526--539},
	file = {PDF:/home/nils-barrellon/Zotero/storage/BVPNZG6U/Mishra et Leong - 2023 - Containing the Cambrian Explosion in QUIC Congestion Control.pdf:application/pdf},
}

@inproceedings{crochet_verifying_2021,
	address = {New York, NY, USA},
	series = {{EPIQ} '21},
	title = {Verifying {QUIC} implementations using {Ivy}},
	isbn = {978-1-4503-9135-1},
	url = {https://dl.acm.org/doi/10.1145/3488660.3493803},
	doi = {10.1145/3488660.3493803},
	abstract = {QUIC is a new transport protocol combining the reliability and congestion control features of TCP with the security features of TLS. One of the main challenges with QUIC is to guarantee that any of its implementation follows the IETF specification. This challenge is particularly appealing as the specification is written in textual language, and hence may contain ambiguities. In a recent work, McMillan and Zuck proposed a formal representation of part of draft-18 of the IETF specification. They also showed that this representation made it possible to efficiently generate tests to stress four implementations of QUIC. Our first contribution is to complete and extend the formal representation from draft-18 to draft-29. Our second contribution is to test seven implementations of both QUIC client and server. Our last contribution is to show that our tool can highlight ambiguities in the QUIC specification, for which we suggest paths to corrections.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 2021 {Workshop} on {Evolution}, {Performance} and {Interoperability} of {QUIC}},
	publisher = {Association for Computing Machinery},
	author = {Crochet, Christophe and Rousseaux, Tom and Piraux, Maxime and Sambon, Jean-François and Legay, Axel},
	month = dec,
	year = {2021},
	pages = {35--41},
	file = {PDF:/home/nils-barrellon/Zotero/storage/6UZBBIJY/Crochet et al. - 2021 - Verifying QUIC implementations using Ivy.pdf:application/pdf},
}

@inproceedings{liu_security_2023,
	address = {New York, NY, USA},
	series = {{ACM} {ICN} '23},
	title = {Security and {Performance} {Characteristics} of {QUIC} and {HTTP}/3},
	isbn = {979-8-4007-0403-1},
	url = {https://dl.acm.org/doi/10.1145/3623565.3623757},
	doi = {10.1145/3623565.3623757},
	abstract = {We focus on the security and performance characteristics of the QUIC protocol, exploring its security qualitatively and its performance quantitatively through experimentation. Performance comparisons between QUIC and traditional TCP-based counterparts were made through experiments under various dimensions. These comparisons were based on measurements of running code on real computing and networking resources within Washington University's Open Network Lab (ONL). The experimental results show that QUIC clients perform as well as or better than TCP clients for single-stream resources with limited bandwidth. However, minimal performance differences exist between QUIC and TCP for multiple streams.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 10th {ACM} {Conference} on {Information}-{Centric} {Networking}},
	publisher = {Association for Computing Machinery},
	author = {Liu, Fan and Crowley, Patrick},
	month = oct,
	year = {2023},
	pages = {124--126},
	file = {Texte intégral:/home/nils-barrellon/Zotero/storage/NMDRZ9EX/Liu et Crowley - 2023 - Security and Performance Characteristics of QUIC and HTTP3.pdf:application/pdf},
}

@inproceedings{zhang_quic_2024,
	address = {New York, NY, USA},
	series = {{WWW} '24},
	title = {{QUIC} is not {Quick} {Enough} over {Fast} {Internet}},
	isbn = {979-8-4007-0171-9},
	url = {https://dl.acm.org/doi/10.1145/3589334.3645323},
	doi = {10.1145/3589334.3645323},
	abstract = {QUIC is expected to be a game-changer in improving web application performance. In this paper, we conduct a systematic examination of QUIC's performance over high-speed networks. We find that over fast Internet, the UDP+QUIC+HTTP/3 stack suffers a data rate reduction of up to 45.2\% compared to the TCP+TLS+HTTP/2 counterpart. Moreover, the performance gap between QUIC and HTTP/2 grows as the underlying bandwidth increases. We observe this issue on lightweight data transfer clients and major web browsers (Chrome, Edge, Firefox, Opera), on different hosts (desktop, mobile), and over diverse networks (wired broadband, cellular). It affects not only file transfers, but also various applications such as video streaming (up to 9.8\% video bitrate reduction) and web browsing. Through rigorous packet trace analysis and kernel- and user-space profiling, we identify the root cause to be high receiver-side processing overhead, in particular, excessive data packets and QUIC's user-space ACKs. We make concrete recommendations for mitigating the observed performance issues.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the {ACM} {Web} {Conference} 2024},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Xumiao and Jin, Shuowei and He, Yi and Hassan, Ahmad and Mao, Z. Morley and Qian, Feng and Zhang, Zhi-Li},
	month = may,
	year = {2024},
	pages = {2713--2722},
	file = {Version soumise:/home/nils-barrellon/Zotero/storage/FAZFBHK7/Zhang et al. - 2024 - QUIC is not Quick Enough over Fast Internet.pdf:application/pdf},
}

@inproceedings{mucke_reacked_2024,
	address = {New York, NY, USA},
	series = {{IMC} '24},
	title = {{ReACKed} {QUICer}: {Measuring} the {Performance} of {Instant} {Acknowledgments} in {QUIC} {Handshakes}},
	isbn = {979-8-4007-0592-2},
	shorttitle = {{ReACKed} {QUICer}},
	url = {https://dl.acm.org/doi/10.1145/3646547.3689022},
	doi = {10.1145/3646547.3689022},
	abstract = {In this paper, we present a detailed performance analysis of QUIC instant{\textasciitilde}ACK, a standard-compliant approach to reduce waiting times during the QUIC connection setup in common CDN deployments. To understand the root causes of the performance properties, we combine numerical analysis and the emulation of eight QUIC implementations using the QUIC Interop Runner. Our experiments comprehensively cover packet loss and non-loss scenarios, different round trip times, and TLS certificate sizes. To clarify instant ACK deployments in the wild, we conduct active measurements of 1M{\textasciitilde}popular domain names. For almost all domain names under control of Cloudflare, Cloudflare uses instant ACK, which in fact improves performance. We also find, however, that instant ACK may lead to unnecessary retransmissions or longer waiting times under some network conditions, raising awareness of drawbacks of instant ACK in the future.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 2024 {ACM} on {Internet} {Measurement} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Mücke, Jonas and Nawrocki, Marcin and Hiesgen, Raphael and Schmidt, Thomas C. and Wählisch, Matthias},
	month = nov,
	year = {2024},
	pages = {389--400},
	file = {PDF:/home/nils-barrellon/Zotero/storage/HEKDDY5E/Mücke et al. - 2024 - ReACKed QUICer Measuring the Performance of Instant Acknowledgments in QUIC Handshakes.pdf:application/pdf},
}

@inproceedings{muthuraj_replication_2024,
	address = {New York, NY, USA},
	series = {{IMC} '24},
	title = {Replication: "{Taking} a long look at {QUIC}"},
	isbn = {979-8-4007-0592-2},
	shorttitle = {Replication},
	url = {https://dl.acm.org/doi/10.1145/3646547.3688453},
	doi = {10.1145/3646547.3688453},
	abstract = {QUIC, a rapidly evolving protocol, has gained prominence with its standardization and increased adoption as HTTP/3 on the World Wide Web. Originating from Google in 2014, QUIC has seen significant changes in transitioning from Google QUIC (gQUIC) to an IETF standard in 2021. Understanding the performance of the current version of QUIC in comparison to its predecessors is crucial given its evolution and widespread adoption.This study conducts a comprehensive performance evaluation of two versions of QUIC: Google QUIC version 37 (gQUICv37, 2017) and IETF QUIC version 1 (QUICv1, 2021). Following parameters and methodologies established by a notable QUIC paper from 2017, we replicate their experiments on gQUICv37 and extend it to QUICv1, leveraging the Emulab testbed to facilitate reproducible research.We show that the performance advantages of QUIC over TCP, given by core features like 0-RTT and multiple streams, are consistent in gQUICv37 and QUICv1. However, notable performance differences arise between the versions due to the implementation of the new BBR congestion control algorithm and an updated loss-detection strategy in QUICv1, resulting in improved performance for QUICv1 under packet reordering scenarios. By utilizing Emulab and sharing our scripts, we enable replication and extension of our study for future QUIC versions.},
	urldate = {2024-11-19},
	booktitle = {Proceedings of the 2024 {ACM} on {Internet} {Measurement} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Muthuraj, Naveenraj and Eghbal, Nooshin and Lu, Paul},
	month = nov,
	year = {2024},
	pages = {375--388},
	file = {PDF:/home/nils-barrellon/Zotero/storage/7YP3JQXU/Muthuraj et al. - 2024 - Replication Taking a long look at QUIC.pdf:application/pdf},
}

@techreport{iyengar_quic_2021,
	type = {Request for {Comments}},
	title = {{QUIC}: {A} {UDP}-{Based} {Multiplexed} and {Secure} {Transport}},
	shorttitle = {{QUIC}},
	url = {https://datatracker.ietf.org/doc/rfc9000},
	abstract = {This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.},
	number = {RFC 9000},
	urldate = {2024-12-06},
	institution = {Internet Engineering Task Force},
	author = {Iyengar, Jana and Thomson, Martin},
	month = may,
	year = {2021},
	doi = {10.17487/RFC9000},
	note = {Num Pages: 151},
	file = {Full Text PDF:/home/nils-barrellon/Zotero/storage/KUGTURUU/Iyengar et Thomson - 2021 - QUIC A UDP-Based Multiplexed and Secure Transport.pdf:application/pdf},
}

@inproceedings{yu_dissecting_2021,
	address = {Ljubljana Slovenia},
	title = {Dissecting {Performance} of {Production} {QUIC}},
	isbn = {978-1-4503-8312-7},
	url = {https://dl.acm.org/doi/10.1145/3442381.3450103},
	doi = {10.1145/3442381.3450103},
	language = {en},
	urldate = {2024-11-27},
	booktitle = {Proceedings of the {Web} {Conference} 2021},
	publisher = {ACM},
	author = {Yu, Alexander and Benson, Theophilus A.},
	month = apr,
	year = {2021},
	pages = {1157--1168},
	file = {PDF:/home/nils-barrellon/Zotero/storage/TFWW6TDQ/Yu et Benson - 2021 - Dissecting Performance of Production QUIC.pdf:application/pdf},
}

@inproceedings{carlucci_http_2015,
	address = {Salamanca Spain},
	title = {{HTTP} over {UDP}: an experimental investigation of {QUIC}},
	isbn = {978-1-4503-3196-8},
	shorttitle = {{HTTP} over {UDP}},
	url = {https://dl.acm.org/doi/10.1145/2695664.2695706},
	doi = {10.1145/2695664.2695706},
	abstract = {This paper investigates “Quick UDP Internet Connections” (QUIC), which was proposed by Google in 2012 as a reliable protocol on top of UDP in order to reduce Web Page retrieval time. We ﬁrst check, through experiments, if QUIC can be safely deployed in the Internet and then we evaluate the Web page load time in comparison with SPDY and HTTP. We have found that QUIC reduces the overall page retrieval time with respect to HTTP in case of a channel without induced random losses and outperforms SPDY in the case of a lossy channel. The FEC module, when enabled, worsens the performance of QUIC.},
	language = {en},
	urldate = {2024-12-08},
	booktitle = {Proceedings of the 30th {Annual} {ACM} {Symposium} on {Applied} {Computing}},
	publisher = {ACM},
	author = {Carlucci, Gaetano and De Cicco, Luca and Mascolo, Saverio},
	month = apr,
	year = {2015},
	pages = {609--614},
	file = {PDF:/home/nils-barrellon/Zotero/storage/U5N9TUA9/Carlucci et al. - 2015 - HTTP over UDP an experimental investigation of QUIC.pdf:application/pdf},
}

@techreport{eddy_transmission_2022,
	type = {Request for {Comments}},
	title = {Transmission {Control} {Protocol} ({TCP})},
	url = {https://datatracker.ietf.org/doc/rfc9293},
	abstract = {This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.},
	number = {RFC 9293},
	urldate = {2024-12-08},
	institution = {Internet Engineering Task Force},
	author = {Eddy, Wesley},
	month = aug,
	year = {2022},
	doi = {10.17487/RFC9293},
	note = {Num Pages: 98},
	file = {Full Text PDF:/home/nils-barrellon/Zotero/storage/KUYKFWLS/Eddy - 2022 - Transmission Control Protocol (TCP).pdf:application/pdf},
}
